openapi: 3.0.3
info:
  title: DHT - OpenAPI 3.0
  description: |-
    Distributed Hash Table (DHT) based on the Chord architecture with the access by REST API model written in Java.
  contact:
    email: mcflydesigner@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:8080
paths:
  /topology/predecessor:
    get:
      tags:
        - topology
      security:
        - basicAuth: []
      description: "Get node's predecessor"
      parameters:
        - in: 'header'
          name: Authorization
          required: true
          description: Credentials
          schema:
            type: string
      responses:
        '200':
          description: "Node's predecessor"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfo'
        '401':
          description: "Invalid credentials"

    put:
      tags:
        - topology
      security:
        - basicAuth: []
      description: "Set node's predecessor"
      parameters:
        - in: 'header'
          name: Authorization
          required: true
          description: Credentials
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeInfo'
      responses:
        '200':
          description: "Node's predecessor"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfo'
        '401':
          description: "Invalid credentials"

  /topology/predecessor/notify:
    post:
      tags:
        - topology
      security:
        - basicAuth: []
      description: "Notify node about predecessor"
      parameters:
        - in: 'header'
          name: Authorization
          required: true
          description: Credentials
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeInfo'
      responses:
        '200':
          description: "OK"
        '401':
          description: "Invalid credentials"

  /topology/successor:
    get:
      tags:
        - topology
      security:
        - basicAuth: []
      description: "Get successor for the key"
      parameters:
        - in: 'header'
          name: Authorization
          description: Credentials
          required: true
          schema:
            type: string
        - in: 'query'
          name: Key
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "Key's successor"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfo'
        '401':
          description: "Invalid credentials"

  /topology/join:
    get:
      tags:
        - topology
      security:
        - basicAuth: []
      description: "Node request to join the cluster"
      parameters:
        - in: 'header'
          name: Authorization
          description: Credentials
          required: true
          schema:
            type: string
        - in: 'query'
          name: nodeId
          required: true
          description: Node ID
          schema:
            type: string
        - in: 'query'
          name: key
          required: true
          description: Node key
          schema:
            type: string
        - in: 'query'
          name: address
          description: Node address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Node join data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeJoin'
        '401':
          description: "Invalid credentials"

  /topology/join/confirm:
    post:
      tags:
        - topology
      security:
        - basicAuth: []
      description: "Node confirmation to join the cluster"
      parameters:
        - in: 'header'
          name: Authorization
          description: Credentials
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeInfo"
      responses:
        '200':
          description: "Join success status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeJoinStatus"
        '401':
          description: "Invalid credentials"

  /storage:
    get:
      tags:
        - storage
      security:
        - basicAuth: []
      description: "Get data by the key"
      parameters:
        - in: 'header'
          name: Authorization
          description: Credentials
          required: true
          schema:
            type: string
        - in: 'query'
          name: key
          description: Key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Requested value by the key"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeData"
        '401':
          description: "Invalid credentials"
    post:
      tags:
        - storage
      security:
        - basicAuth: []
      description: "Store data by the key"
      parameters:
        - in: 'header'
          name: Authorization
          description: Credentials
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeStoreDataRequest"
      responses:
        '200':
          description: "Operation result"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeStoreDataResponse"
        '401':
          description: "Invalid credentials"



security:
  - {}
  - basicAuth: []

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    NodeInfo:
      type: object
      properties:
        nodeId:
          type: string
          example: acde070d-8c4c-4f0d-9d8a-162843c10333
        key:
          type: string
          example: acde070d-8c4c-4f0d-9d8a-162843c10333
        address:
          type: string
          example: localhost:8080
    NodeJoin:
      type: object
      properties:
        data:
          type: object
        nodeId:
          type: string
          example: acde070d-8c4c-4f0d-9d8a-162843c10333
        address:
          type: string
          example: localhost:8080
    NodeJoinStatus:
      type: object
      properties:
        success:
          type: boolean
          example: true
    NodeData:
      type: object
      properties:
        data:
          type: string
          example: value
        nodeId:
          type: string
          example: acde070d-8c4c-4f0d-9d8a-162843c10333
        address:
          type: string
          example: localhost:8080
    NodeStoreDataRequest:
      type: object
      properties:
        key:
          type: string
          example: acde070d-8c4c-4f0d-9d8a-162843c10333
        value:
          type: string
          example: value
    NodeStoreDataResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        nodeId:
          type: string
          example: acde070d-8c4c-4f0d-9d8a-162843c10333
        address:
          type: string
          example: localhost:8080
